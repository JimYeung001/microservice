services:
  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    extends:
      file: common-config.yml
      service: network-deploy-service

  # rabbit:
  #   image: rabbitmq:3.12-management
  #   hostname: rabbitmq
  #   ports:
  #     - "5672:5672"
  #     - "15672:15672"
  #   healthcheck:
  #     test: rabbitmq-diagnostic check_port_connectivity
  #     interval: 30s
  #     timeout: 30s
  #     retries: 10
  #     start_period: 20s
  #   extends:
  #     file: common-config.yml
  #     service: network-deploy-service

  keycloak:
    image: quay.io/keycloak/keycloak:23.0.4
    container_name: keycloak
    ports:
      - "7080:8080"
    environment:
      KEYCLOAK_ADMIN: "admin"
      KEYCLOAK_ADMIN_PASSWORD: "admin"
    command: "start-dev"
    extends:
      file: common-config.yml
      service: network-deploy-service

  configserver:
    image: "qzy111/configserver:v13"
    container_name: ms-configserver
    ports:
      - "8071:8071"
    healthcheck:
      test: "curl --fail --silent localhost:8071/actuator/health/readiness | grep UP || exit 1"
      interval: 20s
      timeout: 20s
      retries: 20
      start_period: 10s
    extends:
      file: common-config.yml
      service: microservice-base-config
    environment:
      OTEL_SERVICE_NAME: "configserver"

  eurekaserver:
    image: "qzy111/eurekaserver:v13"
    container_name: ms-eurekaserver
    ports:
      - "8070:8070"
    healthcheck:
      test: "curl --fail --silent localhost:8070/actuator/health/readiness | grep UP || exit 1"
      interval: 20s
      timeout: 20s
      retries: 20
      start_period: 10s
    extends:
      file: common-config.yml
      service: microservice-configserver-config
    environment:
      SPRING_APPLICATION_NAME: "eurekaserver"
      OTEL_SERVICE_NAME: "configserver"

  accounts:
    image: "qzy111/accounts:v14"
    container_name: ms-accounts
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health/readiness | grep UP || exit 1"
      interval: 30s
      timeout: 30s
      retries: 10
      start_period: 10s
    environment:
      SPRING_APPLICATION_NAME: "accounts"
      OTEL_SERVICE_NAME: "accounts"
      SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS: "kafka:9092"
    extends:
      file: common-config.yml
      service: microservice-eureka-config

  loans:
    image: "qzy111/loans:v13"
    container_name: ms-loans
    healthcheck:
      test: "curl --fail --silent localhost:8090/actuator/health/readiness | grep UP || exit 1"
      interval: 20s
      timeout: 20s
      retries: 20
      start_period: 10s
    environment:
      SPRING_APPLICATION_NAME: "loans"
      OTEL_SERVICE_NAME: "loans"
    extends:
      file: common-config.yml
      service: microservice-eureka-config

  cards:
    image: "qzy111/cards:v13"
    container_name: ms-cards
    healthcheck:
      test: "curl --fail --silent localhost:9000/actuator/health/readiness | grep UP || exit 1"
      interval: 20s
      timeout: 20s
      retries: 20
      start_period: 10s
    environment:
      SPRING_APPLICATION_NAME: "cards"
      OTEL_SERVICE_NAME: "cards"
    extends:
      file: common-config.yml
      service: microservice-eureka-config

  message:
    image: "qzy111/message:v14"
    container_name: ms-message
    environment: 
      SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS: "kafka:9092"
    extends:
      file: common-config.yml
      service: microservice-eureka-config      

  gatewayserver:
    image: "qzy111/gatewayserver:v13"
    container_name: ms-gatewayserver
    ports:
      - "8072:8072"
    depends_on:
      accounts:
        condition: service_healthy
      cards:
        condition: service_healthy
      loans:
        condition: service_healthy
    environment:
      SPRING_APPLICATION_NAME: "gatewayserver"
      OTEL_SERVICE_NAME: "gatewayserver"
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK-SET-URI: "http://keycloak:8080/realms/master/protocol/openid-connect/certs"
    extends:
      file: common-config.yml
      service: microservice-eureka-config

networks:
  eazyNetwork:
    driver: "bridge"